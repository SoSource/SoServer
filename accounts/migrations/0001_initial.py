# Generated by Django 5.0.4 on 2025-06-06 22:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('func', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('creatorNodeId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('validatorNodeId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('Chamber', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('Title', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('Link', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('targetUsers', models.JSONField(blank=True, default=dict, null=True)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('validated', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'ordering': ['-created', '-id'],
            },
        ),
        migrations.CreateModel(
            name='SuperSign',
            fields=[
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('modelVersion', models.IntegerField(default=1)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'ordering': ['-created', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('score', models.IntegerField(blank=True, default=None, null=True)),
                ('match', models.IntegerField(blank=True, default=None, null=True)),
                ('shared_keywords_added', models.BooleanField(blank=True, default=None, null=True)),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('userId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('region_set_date', models.DateTimeField(blank=True, null=True)),
                ('localities', models.TextField(blank=True, default='[]', null=True)),
                ('interests', models.TextField(blank=True, default='[]', null=True)),
                ('follow_topics', models.TextField(blank=True, default='[]', null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('postId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('following', models.BooleanField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('DateTime', models.DateTimeField(blank=True, null=True)),
                ('new', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPubKey',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('end_life_dt', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('keyType', models.CharField(default='password', max_length=50)),
            ],
            options={
                'ordering': ['-created', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserSavePost',
            fields=[
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('modelVersion', models.IntegerField(default=1)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('postId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('saved', models.BooleanField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserVerification',
            fields=[
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('modelVersion', models.IntegerField(default=1)),
                ('creatorNodeId', models.CharField(blank=True, default='', max_length=50)),
                ('validatorNodeId', models.CharField(blank=True, default='', max_length=50)),
                ('isVerified', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserVote',
            fields=[
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('modelVersion', models.IntegerField(default=1)),
                ('blockchainId', models.CharField(blank=True, default='', max_length=50)),
                ('postId', models.CharField(default='0', max_length=50)),
                ('pointerId', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('voteValue', models.CharField(blank=True, default='', max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('modelVersion', models.IntegerField(default=1)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('nodeCreatorId', models.CharField(blank=True, default='0', max_length=50, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('publicKey', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('validation_error', models.BooleanField(blank=True, default=False, null=True)),
                ('display_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('must_rename', models.BooleanField(blank=True, default=None, null=True)),
                ('first_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('timezone', models.CharField(blank=True, default='US/Eastern', max_length=20, null=True)),
                ('receiveNotifications', models.BooleanField(default=True)),
                ('isVerified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['created'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomFCM',
            fields=[
                ('modelVersion', models.IntegerField(default=1)),
                ('id', models.CharField(default='0', max_length=50, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_node', models.DateTimeField(auto_now=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, null=True)),
                ('registration_id', models.TextField(blank=True, null=True, unique=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('User_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
